{"version":3,"file":"static/js/824.1e3785f4.chunk.js","mappings":"sPAYMA,G,QAAiB,CACrBC,OAAO,GAAD,OAAKC,CAAAA,SAAAA,aAAAA,WAAAA,aAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,mBACvBC,WAAW,GAAD,OAAKF,CAAAA,SAAAA,aAAAA,WAAAA,aAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYG,uBAC3BC,YAAY,GAAD,OAAKJ,CAAAA,SAAAA,aAAAA,WAAAA,aAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYK,wBAC5BC,UAAU,GAAD,OAAKN,CAAAA,SAAAA,aAAAA,WAAAA,aAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYO,sBAC1BC,cAAc,GAAD,OAAKR,CAAAA,SAAAA,aAAAA,WAAAA,aAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYS,0BAC9BC,kBAAkB,GAAD,OAAKV,CAAAA,SAAAA,aAAAA,WAAAA,aAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYW,+BAClCC,MAAM,GAAD,OAAKZ,CAAAA,SAAAA,aAAAA,WAAAA,aAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYa,oBAGlBC,GAAMC,EAAAA,EAAAA,IAAcjB,GAEbkB,GAAOC,EAAAA,EAAAA,IAAQH,GACfI,GAAKC,EAAAA,EAAAA,IAAaL,GAElBM,EAAW,SAACC,EAAeC,GACtC,OAAOC,EAAAA,EAAAA,IAA+BP,EAAMK,EAAOC,EACpD,EAEYE,EAAQ,SAACH,EAAeC,GACnC,OAAOG,EAAAA,EAAAA,IAA2BT,EAAMK,EAAOC,EAChD,EAEYI,EAAS,SAACV,GACrB,OAAOW,EAAAA,EAAAA,IAAQX,EAChB,C,6LClCYY,EAAcC,EAAAA,GAAAA,IAAH,uJASXC,EAAWD,EAAAA,GAAAA,IAAH,qMAWRE,EAAeF,EAAAA,GAAAA,OAAH,kTAKHG,EAAAA,EAAAA,KAAAA,GAENA,EAAAA,EAAAA,KAAAA,GAIQA,EAAAA,EAAAA,KAAAA,GACNA,EAAAA,EAAAA,KAAAA,IAKLC,EAAUJ,EAAAA,GAAAA,IAAH,0I,SCIpB,I,MAAA,EAlCA,YAAoD,IAA5BK,EAA2B,EAA3BA,SAChBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,yCAAG,gGACTrB,GAAOC,EAAAA,EAAAA,MADE,UAETS,EAAAA,EAAAA,IAAOV,GACVsB,MAAK,WACJC,aAAaC,WAAW,OACxBC,MAAM,wEACNN,EAAS,IACV,IACAO,OAAM,WACLD,MAAM,2DACP,IAVY,2CAAH,qDAad,OACE,UAAC,EAAD,YACE,UAAC,EAAD,sBACW,KACT,SAAC,EAAD,CACEE,KAAK,SACLC,QAAS,WACPP,GACD,EAJH,0CASF,SAAC,EAAD,UAAYH,MAGjB,E,kDCxCYW,EAAiBhB,EAAAA,GAAAA,KAAH,iHAQdiB,EAAYjB,EAAAA,GAAAA,MAAH,4NAcTkB,EAAYlB,EAAAA,GAAAA,OAAH,gVCiCtB,I,cAAA,EAhDA,WACE,IAAMmB,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMC,MAAMC,KAAlC,IAExBC,EAAQhB,aAAaiB,QAAQ,OAO7BC,EAAQ,yCAAG,WAAOC,GAAP,kFAEbA,EAAEC,iBACuB,IAArBT,EAAUU,OAHD,yCAGsBnB,MAAM,4DAH5B,wBAIPoB,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAW5C,EAAAA,GAAI,SAAU,CACpC6C,IAAKR,EACLS,KAAMd,EACNe,UAAWC,EAAAA,GAAAA,MACXC,aAAa,IARF,uDAWb1B,MAAM,mEAAD,cAXQ,yBAabO,GAASoB,EAAAA,EAAAA,GAAY,KAbR,4EAAH,sDAiBd,OACE,UAAC,EAAD,CACEX,SAAU,SAAAC,GACRD,EAASC,EACV,EAHH,WAKE,SAAC,EAAD,CACEW,YAAY,qDACZC,MAAOpB,EACPqB,SAAU,SAAAb,IA/BM,SAACA,GACrB,IAAQY,EAAUZ,EAAEc,OAAZF,MACRtB,GAASoB,EAAAA,EAAAA,GAAYE,GACtB,CA6BOG,CAAcf,EACf,KAEH,SAAC,EAAD,CAAaf,KAAK,SAAlB,UACE,SAAC,IAAD,CAAiB+B,KAAMC,EAAAA,UAI9B,E,UCnDYC,EAAsB/C,EAAAA,GAAAA,IAAH,kNAUJG,EAAAA,EAAAA,KAAAA,IAIf6C,EAAWhD,EAAAA,GAAAA,IAAH,yJAOR,qBAAGsC,YAA8C,UAAZ,SAArC,IAIAW,EAAOjD,EAAAA,GAAAA,IAAH,sGAIN,qBAAGsC,YAA8C,UAAZ,SAArC,IACU,qBAAGA,YACI,eAAT,MADE,IAIRY,EAASlD,EAAAA,GAAAA,IAAH,sKAWNmD,EAAOnD,EAAAA,GAAAA,IAAH,sLACJ,qBAAGsC,YAAiC,OAAS,MAA7C,GAIFnC,EAAAA,EAAAA,KAAAA,GAGEA,EAAAA,EAAAA,KAAAA,IAIAiD,EAAWpD,EAAAA,GAAAA,KAAH,4DAKRqD,EAAYrD,EAAAA,GAAAA,MAAH,8PAKOG,EAAAA,EAAAA,KAAAA,GAIlBA,EAAAA,EAAAA,KAAAA,ICwBX,I,IAAA,EA1FA,YAAqD,IAA7BmD,EAA4B,EAA5BA,MACdnB,EAA0BmB,EAA1BnB,KAAMG,EAAoBgB,EAApBhB,YAAaiB,EAAOD,EAAPC,GAC3B,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAgCF,EAAAA,EAAAA,UAASrB,GAAzC,eAAOwB,EAAP,KAAiBC,EAAjB,KAEMC,GAAUC,EAAAA,EAAAA,QAAgC,OAChDC,EAAAA,EAAAA,kBAAgB,WACM,OAApBF,EAAQG,SAAoBH,EAAQG,QAAQC,OAC7C,IAED,IAAMC,EAAW,yCAAG,gGACZC,GAAUC,EAAAA,EAAAA,IAAI/E,EAAAA,GAAI,QAAL,UAAiBkE,IADlB,UAEZc,EAAAA,EAAAA,IAAUF,EAAS,CACvB7B,aAAcA,IACbzB,OAAM,SAAAyD,GACP1D,MAAM,4DACN2D,QAAQC,MAAMF,EACf,IAPiB,2CAAH,qDAUXG,EAAU,yCAAG,gGACXC,GAAYN,EAAAA,EAAAA,IAAI/E,EAAAA,GAAI,QAAL,UAAiBkE,IADrB,UAEXoB,EAAAA,EAAAA,IAAUD,GAFC,2CAAH,qDASVE,EAAU,yCAAG,WAAO/C,GAAP,mFACjBA,EAAEC,iBACI+B,GAAUO,EAAAA,EAAAA,IAAI/E,EAAAA,GAAI,QAAL,UAAiBkE,IAFnB,UAGXc,EAAAA,EAAAA,IAAUR,EAAS,CACvB1B,KAAMwB,IACL9C,OAAM,SAAAyD,GACP1D,MAAM,kEAAD,OAAiB0D,GACvB,IAPgB,OAQjBZ,GAAU,GARO,2CAAH,sDAWhB,OACE,UAAC,EAAD,YACE,UAAC,EAAD,CACEpB,YAAaA,EACbvB,QAAS,WACPmD,GACD,EAJH,UAMG5B,GACC,SAAC,IAAD,CAAiBO,KAAMgC,EAAAA,OAEvB,SAAC,IAAD,CAAiBhC,KAAMiC,EAAAA,MAExBrB,IAAU,SAAC,EAAD,CAAQnB,YAAaA,EAArB,SAAmCH,OAE/CsB,IACC,SAAC,EAAD,CACE7B,SAAU,SAAAC,GACR+C,EAAW/C,EACZ,EAHH,UAKE,SAAC,EAAD,CACEf,KAAK,OACL2B,MAAOkB,EACPoB,IAAKlB,EACLnB,SAAU,SAAAb,IAxCK,SAACA,GACxB+B,EAAY/B,EAAEc,OAAOF,MACtB,CAuCWuC,CAAiBnD,EAClB,OAIP,SAAC,EAAD,CACES,YAAaA,EACbvB,QAAS,WACP2C,GAAU,SAAAuB,GAAI,OAAKA,CAAL,GACf,EAJH,UAME,SAAC,IAAD,CAAiBpC,KAAMqC,EAAAA,SAEzB,SAAC,EAAD,CACEnE,QAAS,WACP0D,GACD,EAHH,UAKE,SAAC,IAAD,CAAiB5B,KAAMsC,EAAAA,UAI9B,EC9FYC,GAAkBpF,EAAAA,GAAAA,IAAH,yFAMfqF,GAAarF,EAAAA,GAAAA,IAAH,sGAGZG,EAAAA,EAAAA,KAAAA,ICIX,OAZA,YAA6C,IAAzBqB,EAAwB,EAAxBA,MAClB,OACE,SAAC,GAAD,UACa,OAAVA,GAAmC,IAAjBA,EAAMO,QACvB,SAAC,GAAD,sFAEAP,EAAM8D,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,CAAcjC,MAAOiC,GAAWA,EAAKhC,GAAzC,KAIrB,ECsCD,OA3CA,WACE,OAA0BC,EAAAA,EAAAA,UAA4B,MAAtD,eAAOhC,EAAP,KAAcgE,EAAd,KAEMlF,GAAWC,EAAAA,EAAAA,MAEXmB,EAAQhB,aAAaiB,QAAQ,OAM7B8D,EAAQ,yCAAG,yFACTC,GAAIC,EAAAA,EAAAA,KAAM1D,EAAAA,EAAAA,IAAW5C,EAAAA,GAAI,UAAUuG,EAAAA,EAAAA,IAAM,MAAO,KAAR,UAAiBlE,MAE/DmE,EAAAA,EAAAA,IAAWH,GAAG,SAAAI,GACZ,IAAMC,EAAoB,GAC1BD,EAAcE,SAAQ,SAAAC,GACpB,IAAMC,EAAUD,EAASE,OACzBJ,EAAMK,MAAN,kBAAgBF,GAAhB,IAAyB3C,GAAI0C,EAAS1C,MACtCwC,EAAMM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAElE,UAAUoE,QAAUD,EAAEnE,UAAUoE,OAA5C,GACZ,IACGT,EAAMU,OAAM,SAAAC,GAAI,OAAIA,EAAKxE,MAAL,UAAgBR,EAApB,IAClB8D,EAASO,GAETP,EAAS,KAEZ,IAfc,2CAAH,qDAwBd,OANAmB,EAAAA,EAAAA,YAAU,YArBPjF,GAASpB,EAAS,KAuBnBmF,GAED,GAAE,CAAC/D,KAGF,UAAC,EAAD,YACE,SAAC,EAAD,KACA,SAAC,GAAD,CAAUF,MAAOA,MAGtB,C","sources":["firebase.ts","components/Todos/styles/TodoTemplate.styled.ts","components/Todos/TodoTemplate.tsx","components/Todos/styles/TodoInsert.styled.ts","components/Todos/TodoInsert.tsx","components/Todos/styles/TodoListItem.styled.ts","components/Todos/TodoListItem.tsx","components/Todos/styles/TodoList.styled.ts","components/Todos/TodoList.tsx","pages/Todo/Todo.tsx"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  Auth,\n  updateProfile,\n} from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: `${process.env.REACT_APP_API_KEY}`,\n  authDomain: `${process.env.REACT_APP_AUTH_DOMAIN}`,\n  databaseURL: `${process.env.REACT_APP_DATABASE_URL}`,\n  projectId: `${process.env.REACT_APP_PROJECT_ID}`,\n  storageBucket: `${process.env.REACT_APP_STORAGE_BUCKET}`,\n  messagingSenderId: `${process.env.REACT_APP_MESSAGING_SENDER_ID}`,\n  appId: `${process.env.REACT_APP_APP_ID}`,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\nexport const register = (email: string, password: string) => {\n  return createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const login = (email: string, password: string) => {\n  return signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const logout = (auth: Auth) => {\n  return signOut(auth);\n};\n\nexport const updateUser = async (userName: string) => {\n  if (auth.currentUser == null) return alert('오류 발생!');\n  else return await updateProfile(auth.currentUser, { displayName: userName });\n};\n","import styled from 'styled-components';\nimport palette from '../../../styles/palette';\n\nexport const TodoWrapper = styled.div`\n  width: 512px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 6rem;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const AppTitle = styled.div`\n  position: relative;\n  background: #22b8cf;\n  color: white;\n  height: 4rem;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LogoutButton = styled.button`\n  position: absolute;\n  right: 5%;\n  width: 70px;\n  height: 30px;\n  border: 1px solid ${palette.gray[4]};\n  border-radius: 8px;\n  background: ${palette.gray[4]};\n  cursor: pointer;\n  transition: background 0.2s ease;\n  &:hover {\n    border: 1px solid ${palette.gray[6]};\n    background: ${palette.gray[6]};\n    color: white;\n  }\n`;\n\nexport const Content = styled.div`\n  background: white;\n  height: 22rem;\n  overflow-y: scroll;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth } from 'firebase/auth';\nimport { logout } from '../../firebase';\nimport * as S from './styles/TodoTemplate.styled';\n\ninterface ChildrenProps {\n  children: React.ReactNode;\n}\n\nfunction TodoTemplate({ children }: ChildrenProps) {\n  const navigate = useNavigate();\n\n  const onLogout = async () => {\n    const auth = getAuth();\n    await logout(auth)\n      .then(() => {\n        localStorage.removeItem('uid');\n        alert('로그아웃 완료되었습니다.');\n        navigate('/');\n      })\n      .catch(() => {\n        alert('다시 시도해 주십시오');\n      });\n  };\n\n  return (\n    <S.TodoWrapper>\n      <S.AppTitle>\n        Todo APP{' '}\n        <S.LogoutButton\n          type=\"button\"\n          onClick={() => {\n            onLogout();\n          }}\n        >\n          로그아웃\n        </S.LogoutButton>\n      </S.AppTitle>\n      <S.Content>{children}</S.Content>\n    </S.TodoWrapper>\n  );\n}\n\nexport default TodoTemplate;\n","import styled from 'styled-components';\n\nexport const TodoInsertForm = styled.form`\n  display: flex;\n  background: #495057;\n  position: sticky;\n  top: 0;\n  z-index: 2;\n`;\n\nexport const TodoInput = styled.input`\n  background: none;\n  outline: none;\n  border: none;\n  padding: 0.5rem;\n  font-size: 1.125rem;\n  line-height: 1.5;\n  color: white;\n  &::placeholder {\n    color: #dee2e6;\n  }\n  flex: 1;\n`;\n\nexport const AddButton = styled.button`\n  background: none;\n  outline: none;\n  border: none;\n  background: #868e96;\n  color: white;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  transition: background 0.1s ease-in;\n  &:hover {\n    background: #adb5bd;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { addDoc, collection, Timestamp } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { changeInput } from '../../modules/todos';\nimport * as S from './styles/TodoInsert.styled';\nimport type { RootState, AppDispatch } from '../../modules/index';\n\nfunction TodoInsert() {\n  const dispatch = useDispatch<AppDispatch>();\n  const todoValue = useSelector((state: RootState) => state.todos.input);\n\n  const token = localStorage.getItem('uid');\n\n  const getInputValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    dispatch(changeInput(value));\n  };\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    try {\n      e.preventDefault();\n      if (todoValue.length === 0) return alert('내용을 입력해주세요');\n      await addDoc(collection(db, 'todos'), {\n        uid: token,\n        text: todoValue,\n        createdAt: Timestamp.now(),\n        isCompleted: false,\n      });\n    } catch (err) {\n      alert(`작성에 실패하였습니다.. ${err}`);\n    } finally {\n      dispatch(changeInput(''));\n    }\n  };\n\n  return (\n    <S.TodoInsertForm\n      onSubmit={e => {\n        onSubmit(e);\n      }}\n    >\n      <S.TodoInput\n        placeholder=\"할 일을 입력하세요\"\n        value={todoValue}\n        onChange={e => {\n          getInputValue(e);\n        }}\n      />\n      <S.AddButton type=\"submit\">\n        <FontAwesomeIcon icon={faPlus} />\n      </S.AddButton>\n    </S.TodoInsertForm>\n  );\n}\n\nexport default TodoInsert;\n","import styled from 'styled-components';\nimport palette from '../../../styles/palette';\nimport { StyleProps } from '../../types/Todo.type';\n\nexport const TodoListItemWrapper = styled.div`\n  padding: 1rem;\n  display: flex;\n  align-items: center;\n  position: relative;\n  &:nth-child(even) {\n    background: #f8f9fa;\n  }\n\n  & + & {\n    border-top: 1px solid ${palette.gray[3]};\n  }\n`;\n\nexport const CheckBox = styled.div<StyleProps>`\n  cursor: pointer;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  svg {\n    font-size: 1.5rem;\n    color: ${({ isCompleted }) => (!isCompleted ? 'inherit' : '#22b8cf')};\n  }\n`;\n\nexport const Text = styled.div<StyleProps>`\n  margin-left: 0.5rem;\n  flex: 1;\n\n  color: ${({ isCompleted }) => (!isCompleted ? 'inherit' : '#adb5bd')};\n  text-decoration: ${({ isCompleted }) =>\n    !isCompleted ? 'none' : 'line-through'};\n`;\n\nexport const Remove = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 1.5rem;\n  color: #ff6b6b;\n  cursor: pointer;\n  &:hover {\n    color: #ff8787;\n  }\n`;\n\nexport const Edit = styled.div<StyleProps>`\n  display: ${({ isCompleted }) => (isCompleted ? 'none' : 'flex')};\n  margin-right: 1.5rem;\n  align-items: center;\n  font-size: 1.2rem;\n  color: ${palette.gray[6]};\n  cursor: pointer;\n  &:hover {\n    color: ${palette.gray[4]};\n  }\n`;\n\nexport const EditForm = styled.form`\n  position: absolute;\n  left: 9%;\n`;\n\nexport const EditInput = styled.input`\n  width: 24rem;\n  height: 2rem;\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid ${palette.gray[5]};\n  padding: 0.5rem;\n  padding-left: 0;\n  font-size: 1rem;\n  color: ${palette.gray[6]};\n  &:focus {\n    outline: none;\n  }\n`;\n","import React, { useState, useRef, useLayoutEffect } from 'react';\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquare, faTrashCan } from '@fortawesome/free-regular-svg-icons';\nimport { faPen, faSquareCheck } from '@fortawesome/free-solid-svg-icons';\nimport * as S from './styles/TodoListItem.styled';\nimport type { TodoListItemProps } from '../types/Todo.type';\n\nfunction TodoListItem({ items }: TodoListItemProps) {\n  const { text, isCompleted, id } = items;\n  const [isEdit, setIsEdit] = useState(false);\n  const [editTodo, setEditTodo] = useState(text);\n\n  const editRef = useRef<HTMLInputElement | null>(null);\n  useLayoutEffect(() => {\n    editRef.current !== null && editRef.current.focus();\n  });\n\n  const getDoneTodo = async () => {\n    const doneRef = doc(db, 'todos', `${id}`);\n    await updateDoc(doneRef, {\n      isCompleted: !isCompleted,\n    }).catch(err => {\n      alert('오류가 발생했습니다.');\n      console.error(err);\n    });\n  };\n\n  const deleteTodo = async () => {\n    const deleteRef = doc(db, 'todos', `${id}`);\n    await deleteDoc(deleteRef);\n  };\n\n  const saveEditTodoText = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEditTodo(e.target.value);\n  };\n\n  const editSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const editRef = doc(db, 'todos', `${id}`);\n    await updateDoc(editRef, {\n      text: editTodo,\n    }).catch(err => {\n      alert(`수정에 실패하였습니다. ${err}`);\n    });\n    setIsEdit(false);\n  };\n\n  return (\n    <S.TodoListItemWrapper>\n      <S.CheckBox\n        isCompleted={isCompleted}\n        onClick={() => {\n          getDoneTodo();\n        }}\n      >\n        {isCompleted ? (\n          <FontAwesomeIcon icon={faSquareCheck} />\n        ) : (\n          <FontAwesomeIcon icon={faSquare} />\n        )}\n        {isEdit || <S.Text isCompleted={isCompleted}>{text}</S.Text>}\n      </S.CheckBox>\n      {isEdit && (\n        <S.EditForm\n          onSubmit={e => {\n            editSubmit(e);\n          }}\n        >\n          <S.EditInput\n            type=\"text\"\n            value={editTodo}\n            ref={editRef}\n            onChange={e => {\n              saveEditTodoText(e);\n            }}\n          />\n        </S.EditForm>\n      )}\n      <S.Edit\n        isCompleted={isCompleted}\n        onClick={() => {\n          setIsEdit(prev => !prev);\n        }}\n      >\n        <FontAwesomeIcon icon={faPen} />\n      </S.Edit>\n      <S.Remove\n        onClick={() => {\n          deleteTodo();\n        }}\n      >\n        <FontAwesomeIcon icon={faTrashCan} />\n      </S.Remove>\n    </S.TodoListItemWrapper>\n  );\n}\n\nexport default TodoListItem;\n","import styled from 'styled-components';\nimport palette from '../../../styles/palette';\n\nexport const TodoListWrapper = styled.div`\n  min-height: 320px;\n  max-height: 513px;\n  overflow-y: auto;\n`;\n\nexport const EmptyTodos = styled.div`\n  text-align: center;\n  margin-top: 8rem;\n  color: ${palette.gray[5]};\n  font-size: 2rem;\n`;\n","import TodoListItem from './TodoListItem';\nimport * as S from './styles/TodoList.styled';\nimport type { TodoListProps } from '../types/Todo.type';\n\nfunction TodoList({ todos }: TodoListProps) {\n  return (\n    <S.TodoListWrapper>\n      {todos === null || todos.length === 0 ? (\n        <S.EmptyTodos>해야 할 일 들을 채워주세요!</S.EmptyTodos>\n      ) : (\n        todos.map(todo => <TodoListItem items={todo} key={todo.id} />)\n      )}\n    </S.TodoListWrapper>\n  );\n}\n\nexport default TodoList;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport TodoTemplate from '../../components/Todos/TodoTemplate';\nimport TodoInsert from '../../components/Todos/TodoInsert';\nimport TodoList from '../../components/Todos/TodoList';\nimport { query, collection, where, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport type { TodoItem } from '../../components/types/Todo.type';\n\nfunction Todo() {\n  const [todos, setTodos] = useState<TodoItem[] | null>(null);\n\n  const navigate = useNavigate();\n\n  const token = localStorage.getItem('uid');\n\n  const checkToken = () => {\n    !token && navigate('/');\n  };\n\n  const getDatas = async () => {\n    const q = query(collection(db, 'todos'), where('uid', '==', `${token}`));\n\n    onSnapshot(q, querySnapshot => {\n      const datas: TodoItem[] = [];\n      querySnapshot.forEach(document => {\n        const results = document.data() as TodoItem;\n        datas.push({ ...results, id: document.id });\n        datas.sort((a, b) => a.createdAt.seconds - b.createdAt.seconds);\n      });\n      if (datas.every(user => user.uid === `${token}`)) {\n        setTodos(datas);\n      } else {\n        setTodos(null);\n      }\n    });\n  };\n\n  useEffect(() => {\n    checkToken();\n    getDatas();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token]);\n\n  return (\n    <TodoTemplate>\n      <TodoInsert />\n      <TodoList todos={todos} />\n    </TodoTemplate>\n  );\n}\n\nexport default Todo;\n"],"names":["firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","app","initializeApp","auth","getAuth","db","getFirestore","register","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","TodoWrapper","styled","AppTitle","LogoutButton","palette","Content","children","navigate","useNavigate","onLogout","then","localStorage","removeItem","alert","catch","type","onClick","TodoInsertForm","TodoInput","AddButton","dispatch","useDispatch","todoValue","useSelector","state","todos","input","token","getItem","onSubmit","e","preventDefault","length","addDoc","collection","uid","text","createdAt","Timestamp","isCompleted","changeInput","placeholder","value","onChange","target","getInputValue","icon","faPlus","TodoListItemWrapper","CheckBox","Text","Remove","Edit","EditForm","EditInput","items","id","useState","isEdit","setIsEdit","editTodo","setEditTodo","editRef","useRef","useLayoutEffect","current","focus","getDoneTodo","doneRef","doc","updateDoc","err","console","error","deleteTodo","deleteRef","deleteDoc","editSubmit","faSquareCheck","faSquare","ref","saveEditTodoText","prev","faPen","faTrashCan","TodoListWrapper","EmptyTodos","map","todo","setTodos","getDatas","q","query","where","onSnapshot","querySnapshot","datas","forEach","document","results","data","push","sort","a","b","seconds","every","user","useEffect"],"sourceRoot":""}