{"version":3,"file":"static/js/746.f1f557ac.chunk.js","mappings":"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","sources":["firebase.ts","components/auth/styles/AuthTemplate.styled.ts","components/auth/AuthTemplate.tsx","components/auth/styles/AuthForm.styled.ts","components/auth/AuthForm.tsx","pages/Main/Login.tsx","pages/Main/Register.tsx","pages/Main/Main.tsx"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  Auth,\n  updateProfile,\n} from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: `${process.env.REACT_APP_API_KEY}`,\n  authDomain: `${process.env.REACT_APP_AUTH_DOMAIN}`,\n  databaseURL: `${process.env.REACT_APP_DATABASE_URL}`,\n  projectId: `${process.env.REACT_APP_PROJECT_ID}`,\n  storageBucket: `${process.env.REACT_APP_STORAGE_BUCKET}`,\n  messagingSenderId: `${process.env.REACT_APP_MESSAGING_SENDER_ID}`,\n  appId: `${process.env.REACT_APP_APP_ID}`,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\nexport const register = (email: string, password: string) => {\n  return createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const login = (email: string, password: string) => {\n  return signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const logout = (auth: Auth) => {\n  return signOut(auth);\n};\n\nexport const updateUser = async (userName: string) => {\n  if (auth.currentUser == null) return alert('오류 발생!');\n  else return await updateProfile(auth.currentUser, { displayName: userName });\n};\n","import styled from 'styled-components';\n\nexport const AuthTemplateWrapper = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LogoArea = styled.div`\n  display: block;\n  padding-bottom: 2rem;\n  text-align: center;\n  font-weight: bold;\n  letter-spacing: 2px;\n`;\n\nexport const WhiteBox = styled.div`\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\n  padding: 2rem;\n  width: 360px;\n  background: white;\n  border-radius: 2px;\n`;\n","import React from 'react';\nimport * as S from './styles/AuthTemplate.styled';\n\nfunction AuthTemplate({ children }: { children: React.ReactElement }) {\n  return (\n    <S.AuthTemplateWrapper>\n      <S.WhiteBox>\n        <S.LogoArea>\n          <span>WELCOME to Todo APP</span>\n        </S.LogoArea>\n        {children}\n      </S.WhiteBox>\n    </S.AuthTemplateWrapper>\n  );\n}\n\nexport default AuthTemplate;\n","import styled, { css } from 'styled-components';\nimport palette from '../../../styles/palette';\nimport type { ButtonStyledProps } from '../../types/Auth.type';\n\nexport const AuthFormWrapper = styled.div`\n  h3 {\n    margin: 0;\n    color: ${palette.gray[8]};\n    margin-bottom: 1rem;\n    font-size: 1.2rem;\n    font-weight: bolder;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  font-size: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n\nexport const Footer = styled.div`\n  margin-top: 2rem;\n  text-align: right;\n  a {\n    color: ${palette.gray[6]};\n    text-decoration: underline;\n    &:hover {\n      color: ${palette.gray[9]};\n    }\n  }\n`;\n\nexport const ChangeAuthButton = styled.span`\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n  font-size: 0.875rem;\n  margin-top: 1rem;\n`;\n\nexport const SubmitButton = styled.button<ButtonStyledProps>`\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  margin-top: 1rem;\n  color: white;\n  outline: none;\n  cursor: pointer;\n\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n\n  ${({ fullWidth }) =>\n    fullWidth &&\n    css`\n      padding-top: 0.75rem;\n      padding-bottom: 0.75rem;\n      width: 100%;\n      font-size: 1.125rem;\n    `}\n\n  ${({ cyan }) =>\n    cyan &&\n    css`\n      background: ${palette.cyan[5]};\n      &:hover {\n        background: ${palette.cyan[4]};\n      }\n    `}\n\n    ${({ disabled }) =>\n    disabled &&\n    css`\n      background: ${palette.gray[4]};\n      cursor: not-allowed;\n      &:hover {\n        background: ${palette.gray[4]};\n      }\n    `}\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField } from '../../modules/auth';\nimport { register, db, login } from '../../firebase';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { setAuthType } from '../../modules/auth';\nimport * as S from './styles/AuthForm.styled';\nimport type { AppDispatch, RootState } from '../../modules';\nimport type { AuthType } from '../types/Auth.type';\nimport type { AuthFormProps } from '../types/Auth.type';\n\nconst textMap: AuthType = {\n  login: '로그인',\n  register: '회원가입',\n};\n\nconst AuthForm = ({ type }: AuthFormProps) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n\n  const [error, setError] = useState<string | null>(null);\n\n  const userInfo = useSelector((state: RootState) => state.auth);\n\n  const text = textMap[type];\n\n  const handleChangeUserInfo = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let { name, value } = e.target;\n    dispatch(\n      changeField({\n        form: type,\n        key: name,\n        value,\n      })\n    );\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (type === 'register') {\n      await register(userInfo.register.email, userInfo.register.password)\n        .then(res => {\n          setDoc(doc(db, 'users', `${res.user.uid}`), {\n            id: res.user.uid,\n            email: res.user.email,\n          });\n          alert('회원가입 성공!');\n          navigate('/todo');\n        })\n        .catch(err => {\n          switch (err.code) {\n            case 'auth/email-already-in-use':\n              return alert('이미 사용중인 이메일입니다.');\n            default:\n              return alert('회원가입 실패');\n          }\n        });\n    } else if (type === 'login') {\n      await login(userInfo.login.email, userInfo.login.password)\n        .then(res => {\n          localStorage.setItem('uid', res.user.uid);\n          alert(`어서오세요 ${res.user.email}님`);\n          navigate('/todo');\n        })\n        .catch(err => {\n          switch (err.code) {\n            case 'auth/user-not-found':\n              return alert('회원 정보가 존재하지 않습니다.');\n            case 'auth/wrong-password':\n              return alert('비밀번호가 틀렸습니다.');\n            case 'auth/invalid-email':\n              return alert('유효하지 않은 이메일입니다.');\n            default:\n              return alert('로그인 실패');\n          }\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (!userInfo[type].email && !userInfo[type].password) {\n      setError('정보를 입력해주세요');\n    } else if (!userInfo[type].email.includes('@' && '.com')) {\n      setError('이메일 형식이 아닙니다.');\n    } else if (userInfo[type].password.length < 8) {\n      setError('비밀번호는 8자 이상입력해주세요');\n    } else {\n      setError(null);\n    }\n  }, [error, type, userInfo]);\n\n  return (\n    <S.AuthFormWrapper>\n      <h3>{text}</h3>\n      <form\n        onSubmit={e => {\n          handleSubmit(e);\n        }}\n      >\n        <S.StyledInput\n          autoComplete=\"email\"\n          name=\"email\"\n          placeholder=\"이메일을 입력해주세요\"\n          value={userInfo[type].email}\n          onChange={handleChangeUserInfo}\n        />\n        <S.StyledInput\n          autoComplete=\"new-password\"\n          name=\"password\"\n          placeholder=\"비밀번호를 입력해주세요\"\n          type=\"password\"\n          value={userInfo[type].password}\n          onChange={handleChangeUserInfo}\n        />\n        {error && <S.ErrorMessage>{error}</S.ErrorMessage>}\n        <S.SubmitButton\n          cyan\n          fullWidth\n          disabled={userInfo[type].email.includes('@' && '.com') && userInfo[type].password.length > 7 ? false : true}\n        >\n          {text}\n        </S.SubmitButton>\n      </form>\n      <S.Footer>\n        {type === 'login' ? (\n          <S.ChangeAuthButton\n            onClick={() => {\n              dispatch(setAuthType('register'));\n            }}\n          >\n            회원가입\n          </S.ChangeAuthButton>\n        ) : (\n          <S.ChangeAuthButton\n            onClick={() => {\n              dispatch(setAuthType('login'));\n            }}\n          >\n            로그인\n          </S.ChangeAuthButton>\n        )}\n      </S.Footer>\n    </S.AuthFormWrapper>\n  );\n};\n\nexport default AuthForm;\n","import AuthTemplate from '../../components/auth/AuthTemplate';\nimport AuthForm from '../../components/auth/AuthForm';\n\nfunction Login() {\n  return (\n    <AuthTemplate>\n      <AuthForm type=\"login\" />\n    </AuthTemplate>\n  );\n}\n\nexport default Login;\n","import AuthTemplate from '../../components/auth/AuthTemplate';\nimport AuthForm from '../../components/auth/AuthForm';\n\nfunction Register() {\n  return (\n    <AuthTemplate>\n      <AuthForm type=\"register\" />\n    </AuthTemplate>\n  );\n}\n\nexport default Register;\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Login from './Login';\nimport Register from './Register';\nimport type { RootState } from '../../modules/index';\n\nfunction Main() {\n  const navigate = useNavigate();\n  const token = localStorage.getItem('uid');\n\n  const authType = useSelector((state: RootState) => state.auth.authType);\n\n  const checkToken = () => {\n    token && navigate('/todo');\n  };\n\n  useEffect(() => {\n    checkToken();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div>{authType === 'login' ? <Login /> : authType === 'register' && <Register />}</div>;\n}\n\nexport default Main;\n"],"names":["firebaseConfig","apiKey","process","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","auth","getAuth","db","getFirestore","register","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","AuthTemplateWrapper","styled","LogoArea","WhiteBox","children","AuthFormWrapper","palette","StyledInput","Footer","ChangeAuthButton","ErrorMessage","SubmitButton","fullWidth","css","cyan","disabled","textMap","type","dispatch","useDispatch","navigate","useNavigate","useState","error","setError","userInfo","useSelector","state","text","handleChangeUserInfo","e","target","name","value","changeField","form","key","handleSubmit","preventDefault","then","res","setDoc","doc","user","uid","id","alert","catch","err","code","localStorage","setItem","useEffect","includes","length","onSubmit","autoComplete","placeholder","onChange","onClick","setAuthType","token","getItem","authType"],"sourceRoot":""}